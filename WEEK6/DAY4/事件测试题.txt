笔试:
1、什么是事件？
  事件就是DOM和浏览器之间的交互行为(只要触发了这个行为,也就相当于触发了事件)，例如：box.onclick=function(){} 如果我们点击了box这个盒子，就触发了盒子的click事件，同样也会把给事件绑定的这个方法执行

  事件绑定：就是给某一个元素的相关事件行为绑定方法
    ->DOM0事件绑定
      box.onclick=function(){}

    ->DOM2事件绑定
      box.addEventListener('click',function(){},false);

  DOM0和DOM2的区别?
    ->DOM0属于给当前元素的某一个私有的属性赋值：box.onclick=...
      1)只能给当前元素的某一个事件绑定一个方法，绑定多个，后面绑定的会把前面的覆盖掉

    ->DOM2属于通过原型链的查找机制，找到EventTarget.prototype上的addEventListener这个方法，执行这个方法，把需要绑定的函数放在当前元素的“事件池”中
      1)可以给当前元素的某一个事件类型绑定多个不同的方法，触发事件，这些绑定的方法会按照在事件池中的顺序(和绑定的顺序相同)依次把方法执行(IE低版本有区别)
      2)DOM2中有一些单独的事件，这些事件不是元素的私有属性，所以只有DOM2的绑定方式才会给这些事件绑定上方法，例如：DOMContentLoaded...

  document.ready和document.load的区别?(JQ中的$(document).ready()和window.onload的区别?)
    ->window.onload，是采用DOM0级事件绑定监听的load事件
      1)load事件本身就是当所有资源加载完成才会被触发,window.onload指的是浏览器中的资源文件(HTML结构、图片、文字、音视频...)加载完成就会被触发
      2)DOM0绑定方式决定了他只能绑定一个方法，绑定多个，后面把前面会覆盖掉

    ->$(document).ready()是JQ拿原生JS封装好的方法,等同于$(function(){}),JQ在封装这个方法的时候，采用DOM2级事件绑定，而且监听的事件是DOMContentLoaded(在IE6~8下监听的是onreadystatechange事件)
      1)DOMContentLoaded事件本身就是DOM结构渲染完成就会被触发，所以只要页面中的HTML结构加载完成，就会触发对应的事件，把绑定的方法执行
      2)采用DOM2绑定，所以可以绑定多个方法


2、IE和火狐浏览器中的事件有哪些区别？如何的保持统一?
   事件对象
     e=e||window.event;
     e.target||e.srcElement
     e.pageX
     e.pageY
     e.preventDefault()||e.returnValue=false
     e.stopPropagation()||e.cancelBubble=true
     ...

   DOM二级事件的兼容性
     addEventListener / attachEvent
     THIS问题
     顺序问题
     重复问题

   on run off(回去后务必看懂)

3、mouseenter和mouseover的区别?
   ->mouseover默认有事件的默认传播机制，而mouseenter默认阻止了事件的冒泡传播
     =>事件传播机制分为：捕获和冒泡
     =>冒泡机制可以让我们采用事件委托来处理程序

   ->mouseenter属于进入，mouseover属于滑过，进入到容器中的子元素中，会触发父元素的mouseout和子元素的mouseover(传播到父元素上，父元素的mouseover也被触发了)；但是mouseenter则不会这样，进入到子元素，不会触发父元素的mouseleave，子元素的mouseenter触发，但是不传播到父级容器上

4、JQ中有哪些绑定事件的方法，不同方法之间的区别是什么?
   on off 核心，其余的方法都是基于这个扩展出来的，最后使用的都是on/off

   bind unbind trigger

   live / delegate

   one

   click、mouseover...

   这些方法支持自定义事件吗？


5、你是如何理解发布订阅模式的?

   JS中的设计模式：
     =>单例模式：处理业务逻辑的
     =>构造原型模式：封装类库、组件、框架、插件等

     =>发布订阅模式：处理一些具体需求的
     =>promise模式：处理一些具体需求的

     ...

   发布订阅模式：
     =>发布一个计划表(发布)
     =>向计划表中追加一些需要处理的事情(订阅)
     =>当条件符合的时候通知计划表中的事情执行(通知)





机试：
基于事件委托，实现多级菜单折叠(可以使用JQ)


类库：jQuery
  只是提供了一些常用的方法，可以应用到任何的项目中，不具备业务性

组件：bootstrap
  提供了很多通用的组件(HTML/CSS/JS都是别人规定好的)，我们只需要按照要求使用，就可以直接的达到效果

插件：swiper/iscroll
  针对于一个具体业务逻辑的封装，例如：选想卡插件或者轮播图插件...

框架：React/Vue
  具备一定编程思想的(MVC/MVVM)叫做框架
